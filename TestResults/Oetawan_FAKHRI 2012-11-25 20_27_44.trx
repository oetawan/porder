<?xml version="1.0" encoding="UTF-8"?>
<TestRun id="5f6e14bc-7b74-409f-bd46-5578e742a583" name="Oetawan@FAKHRI 2012-11-25 20:27:44" runUser="FAKHRI\Oetawan" xmlns="http://microsoft.com/schemas/VisualStudio/TeamTest/2010">
  <TestSettings name="Local" id="4e3a9320-3389-4245-aa23-3ca096a9254c">
    <Description>These are default test settings for a local test run.</Description>
    <Deployment enabled="false" runDeploymentRoot="Oetawan_FAKHRI 2012-11-25 20_27_44" />
    <Execution>
      <TestTypeSpecific />
      <AgentRule name="Execution Agents">
      </AgentRule>
    </Execution>
  </TestSettings>
  <Times creation="2012-11-25T20:27:44.8814523+07:00" queuing="2012-11-25T20:27:45.3154771+07:00" start="2012-11-25T20:27:45.9675144+07:00" finish="2012-11-25T20:28:12.5560352+07:00" />
  <ResultSummary outcome="Failed">
    <Counters total="1" executed="1" error="0" failed="1" timeout="0" aborted="0" inconclusive="0" passedButRunAborted="0" notRunnable="0" notExecuted="0" disconnected="0" warning="0" passed="0" completed="0" inProgress="0" pending="0" />
  </ResultSummary>
  <TestDefinitions>
    <UnitTest name="TestFindAllGroups" storage="c:\users\oetawan\appdata\local\temp\obeol0r3.xpo\porder.test.dll" id="68f6ddcc-26ec-95b3-6b4b-3131e487882d">
      <Execution timeOut="1800000" id="0ca7e2db-5acb-49ac-98ac-dacdefb5a39e" />
      <TestMethod codeBase="C:/Users/Oetawan/AppData/Local/Temp/obeol0r3.xpo/porder.test.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="porder.test.GroupingRepositoryTest, porder.test, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="TestFindAllGroups" />
    </UnitTest>
  </TestDefinitions>
  <TestLists>
    <TestList name="Results Not in a List" id="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestList name="All Loaded Results" id="19431567-8539-422a-85d7-44ee4e166bda" />
  </TestLists>
  <TestEntries>
    <TestEntry testId="68f6ddcc-26ec-95b3-6b4b-3131e487882d" executionId="0ca7e2db-5acb-49ac-98ac-dacdefb5a39e" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
  </TestEntries>
  <Results>
    <UnitTestResult executionId="0ca7e2db-5acb-49ac-98ac-dacdefb5a39e" testId="68f6ddcc-26ec-95b3-6b4b-3131e487882d" testName="TestFindAllGroups" computerName="FAKHRI" duration="00:00:26.3252272" startTime="2012-11-25T20:27:46.0285179+07:00" endTime="2012-11-25T20:28:12.4750306+07:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="0ca7e2db-5acb-49ac-98ac-dacdefb5a39e">
      <Output>
        <ErrorInfo>
          <Message>Test method porder.test.GroupingRepositoryTest.TestFindAllGroups threw exception: 
System.InvalidOperationException: The connection string 'Order' in the application's configuration file does not contain the required providerName attribute."</Message>
          <StackTrace>    at System.Data.Entity.Internal.LazyInternalConnection.InitializeFromConnectionStringSetting(ConnectionStringSettings appConfigConnection)
   at System.Data.Entity.Internal.LazyInternalConnection.TryInitializeFromAppConfig(String name, AppConfig config)
   at System.Data.Entity.Internal.LazyInternalConnection.Initialize()
   at System.Data.Entity.Internal.LazyInternalConnection.get_ProviderName()
   at System.Data.Entity.Internal.LazyInternalContext.InitializeContext()
   at System.Data.Entity.Internal.InternalContext.Initialize()
   at System.Data.Entity.Internal.InternalContext.ExecuteSqlQuery[TElement](String sql, Object[] parameters)
   at System.Data.Entity.Internal.InternalContext.ExecuteSqlQueryAsIEnumerable[TElement](String sql, Object[] parameters)
   at System.Data.Entity.Internal.InternalContext.ExecuteSqlQuery(Type elementType, String sql, Object[] parameters)
   at System.Data.Entity.Internal.InternalSqlNonSetQuery.GetEnumerator()
   at System.Linq.Enumerable.&lt;CastIterator&gt;d__b1`1.MoveNext()
   at System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)
   at System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
   at porder.test.GroupingRepositoryTest.TestFindAllGroups() in E:\Projects\porder\porder.test\GroupingRepositoryTest.cs:line 74
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
  </Results>
</TestRun>